// File: backend/prisma/schema.prisma
// -----------------------------------

generator client {
  provider = "prisma-client-js"
  // The "output" line has been removed to use the default location.
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ... rest of your schema remains the same
enum AttendanceStatus {
  PRESENT
  ABSENT
}

enum MarkedBy {
  AUTOMATED
  MANUAL_TEACHER
}

model Organisation {
  id       String  @id @default(uuid())
  orgId    String  @unique
  name     String
  password String
  classes  Class[]
}

model Class {
  id             String       @id @default(uuid())
  name           String
  ipAddress      String?
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  organisationId String
  subjects       Subject[]
  students       Student[]
  teachers       Teacher[]
  attendances    Attendance[]
}

model Teacher {
  id        String    @id @default(uuid())
  teacherId String    @unique
  name      String
  password  String
  classes   Class[]
  subjects  Subject[]
}

model Subject {
  id          String       @id @default(uuid())
  name        String
  classes     Class[]
  teachers    Teacher[]
  attendances Attendance[]
}

model Student {
  id               String       @id @default(uuid())
  rollNo           String       @unique
  name             String
  password         String
  profileImageUrl  String? // URL from Cloudinary for the profile picture
  faceEncoding     String? // The 128-d encoding string from the Python service
  class            Class        @relation(fields: [classId], references: [id])
  classId          String
  attendances      Attendance[]
}

model Attendance {
  id        String           @id @default(uuid())
  createdAt DateTime         @default(now())
  status    AttendanceStatus
  markedBy  MarkedBy         @default(AUTOMATED)
  student   Student          @relation(fields: [studentId], references: [id])
  studentId String
  subject   Subject          @relation(fields: [subjectId], references: [id])
  subjectId String
  class     Class            @relation(fields: [classId], references: [id])
  classId   String
}

